name: Build executable for Windows
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
env:
  PYTHON_VERSION: 3.11.0
  # Name of the installer
  APP_NAME: OpenMS-PeakStorm
  # Define unique GUID for UpgradeCode
  APP_UpgradeCode: "9d29e8c8-45dc-501c-b776-99a6aea2f1a8"
  # Define needed TOPP tools here

jobs:
  build-executable:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python (regular distribution)
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }} # Use the same version as the embeddable version
    
    - name: Setup python embeddable version
      run: |
        # Create a directory for the embeddable Python version
        mkdir python-${{ env.PYTHON_VERSION }}
        
        # Download and unzip the embeddable Python version
        curl -O https://www.python.org/ftp/python/${{ env.PYTHON_VERSION }}/python-${{ env.PYTHON_VERSION }}-embed-amd64.zip
        unzip python-${{ env.PYTHON_VERSION }}-embed-amd64.zip -d python-${{ env.PYTHON_VERSION }}
        rm python-${{ env.PYTHON_VERSION }}-embed-amd64.zip

        # Define paths for the regular Python distribution and the embeddable distribution
        $PYTHON_DIR="${{ runner.tool_cache }}/Python/${{ env.PYTHON_VERSION }}/x64" # Path from actions/setup-python
        $EMBED_DIR="python-${{ env.PYTHON_VERSION }}"
        
        mkdir -p $EMBED_DIR/Lib/site-packages/tkinter
        mkdir -p $EMBED_DIR/tcl

        # Copy necessary Tkinter files from the regular Python distribution
        cp -r $PYTHON_DIR/Lib/tkinter/* $EMBED_DIR/Lib/site-packages/tkinter/
        cp -r $PYTHON_DIR/tcl/* $EMBED_DIR/tcl/
        cp $PYTHON_DIR/DLLs/_tkinter.pyd $EMBED_DIR/
        cp $PYTHON_DIR/DLLs/tcl86t.dll $EMBED_DIR/
        cp $PYTHON_DIR/DLLs/tk86t.dll $EMBED_DIR/

    - name: Install pip
      run: |
        curl -O https://bootstrap.pypa.io/get-pip.py
        ./python-${{ env.PYTHON_VERSION }}/python get-pip.py --no-warn-script-location
        rm get-pip.py

    - name: Uncomment 'import site' in python311._pth file
      run: |
        sed -i 's/#import site/import site/' python-${{ env.PYTHON_VERSION }}/python311._pth

    - name: Install Required Packages
      run: .\python-${{ env.PYTHON_VERSION }}\python -m pip install --force-reinstall -r requirements.txt --no-warn-script-location

    - name: Set to offline deployment
      run: |
        $content = Get-Content -Raw settings.json | ConvertFrom-Json
        $content.online_deployment = $false
        $content | ConvertTo-Json -Depth 100 | Set-Content settings.json

    - name: Create .bat file
      run: |
          echo " start /min .\python-${{ env.PYTHON_VERSION }}\python -m streamlit run app.py local" > ${{ env.APP_NAME }}.bat

    - name: Create All-in-one executable folder
      run: |
        mkdir streamlit_exe

        mv python-${{ env.PYTHON_VERSION }} streamlit_exe
        cp -r src streamlit_exe
        cp -r content streamlit_exe
        cp -r assets streamlit_exe
        cp -r .streamlit streamlit_exe
        cp app.py streamlit_exe
        cp settings.json streamlit_exe
        cp default-parameters.json streamlit_exe
        cp ${{ env.APP_NAME }}.bat streamlit_exe

    - name: Generate Readme.txt
      shell: bash
      run: |
        cat <<EOF > streamlit_exe/Readme.txt
        Welcome to ${{ env.APP_NAME }} app!

        To launch the application:
        1. Navigate to the installation directory.
        2. Double-click on the file: ${{ env.APP_NAME }}.bat or ${{ env.APP_NAME }} shortcut.

        Additional Information:
        - If multiple Streamlit apps are running, you can change the port in the .streamlit/config.toml file.
          Example:
            [server]
            port = 8502

        Reach out to us:
        - Join our Discord server for support and community discussions: https://discord.com/invite/4TAGhqJ7s5
        - Contribute or stay updated with the latest OpenMS web app developments on GitHub: https://github.com/OpenMS/streamlit-template
        - Visit our website for more information: https://openms.de/
        
        Thank you for using ${{ env.APP_NAME }}!
        EOF
        
    - name: Install WiX Toolset
      run: |
        curl -LO https://github.com/wixtoolset/wix3/releases/download/wix3111rtm/wix311-binaries.zip
        unzip wix311-binaries.zip -d wix
        rm wix311-binaries.zip
    
    - name: Build .wxs for streamlit_exe folder
      run: |
        ./wix/heat.exe dir streamlit_exe -gg -sfrag -sreg -srd -template component -cg StreamlitExeFiles -dr AppSubFolder -out streamlit_exe_files.wxs
    
    - name: Generate VBScript file
      shell: bash
      run: |
        cat <<EOF > ShowSuccessMessage.vbs
        MsgBox "The ${{ env.APP_NAME }} application is successfully installed.", vbInformation, "Installation Complete"
        EOF

    - name: Prepare SourceDir
      run: |
        mkdir SourceDir
        mv streamlit_exe/* SourceDir
        cp ShowSuccessMessage.vbs SourceDir
        cp assets/openms_license.rtf SourceDir
        # Logo of app
        cp assets/openms.ico SourceDir
        
    - name: Generate WiX XML file
      shell: bash
      run: |
        cat <<EOF > streamlit_exe.wxs
        <?xml version="1.0"?>
        <Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
          <Product Id="*" Name="${{ env.APP_NAME }}" Language="1033" Version="1.0.0.0" Codepage="1252" Manufacturer="OpenMS Developer Team" UpgradeCode="${{ env.APP_UpgradeCode }}">
            <Package Id="*" InstallerVersion="300" Compressed="yes" InstallPrivileges="elevated" Platform="x64" />
            <Media Id="1" Cabinet="streamlit.cab" EmbedCab="yes" />
        
            <!-- Folder structure -->
            <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
            <Directory Id="TARGETDIR" Name="SourceDir">
              <Directory Id="ProgramFilesFolder"> 
                <Directory Id="INSTALLFOLDER" Name="${{ env.APP_NAME }}">
                  <Directory Id="AppSubFolder" Name="${{ env.APP_NAME }}" /> 
                  <Component Id="CreateAppFolder" Guid="95dbfa06-d36a-427f-995c-e87769ac2e59">
                    <CreateFolder>
                      <Permission User="Everyone" GenericAll="yes" />
                    </CreateFolder>
                  </Component>
                </Directory>
              </Directory>
              <Directory Id="DesktopFolder" />
            </Directory>
        
            <!-- Add components -->
            <Feature Id="MainFeature" Title="Main Application" Level="1">
              <ComponentGroupRef Id="StreamlitExeFiles" />
              <ComponentRef Id="CreateAppFolder" />
              <ComponentRef Id="DesktopShortcutComponent" />
              <ComponentRef Id="InstallDirShortcutComponent" />
            </Feature>
        
            <!-- Create shortcut for running app on desktop -->
            <Component Id="DesktopShortcutComponent" Guid="3597b243-9180-4d0b-b105-30d8b0d1a334" Directory="DesktopFolder">
              <Shortcut Id="DesktopShortcut" Name="${{ env.APP_NAME }}" Description="Launch ${{ env.APP_NAME }}" Target="[AppSubFolder]${{ env.APP_NAME }}.bat" WorkingDirectory="AppSubFolder" Icon="AppIcon" />
              <RegistryValue Root="HKCU" Key="Software\\OpenMS\\${{ env.APP_NAME }}" Name="DesktopShortcut" Type="integer" Value="1" KeyPath="yes" />
            </Component>
        
            <!-- Create shortcut for running app in installer folder -->
            <Component Id="InstallDirShortcutComponent" Guid="c2df9472-3b45-4558-a56d-6034cf7c8b72" Directory="AppSubFolder">
              <Shortcut Id="InstallDirShortcut" Name="${{ env.APP_NAME }}" Description="Launch ${{ env.APP_NAME }}" Target="[AppSubFolder]${{ env.APP_NAME }}.bat" WorkingDirectory="AppSubFolder" Icon="AppIcon" />
              <RegistryValue Root="HKCU" Key="Software\\OpenMS\\${{ env.APP_NAME }}" Name="InstallFolderShortcut" Type="integer" Value="1" KeyPath="yes" />
            </Component>
        
            <!-- Provide icon here; it should exist in the SourceDir folder -->
            <Icon Id="AppIcon" SourceFile="SourceDir/openms.ico" />
        
            <!-- Run app directly after installation -->
            <!-- <CustomAction Id="RunApp" Directory="AppSubFolder" Execute="deferred" Return="asyncNoWait" Impersonate="no"
                          ExeCommand="cmd.exe /c &quot;[AppSubFolder]${{ env.APP_NAME }}.bat&quot;" /> -->
            
            <!-- Custom Action to Show Success Message -->
            <Binary Id="ShowMessageScript" SourceFile="SourceDir/ShowSuccessMessage.vbs" />
            <CustomAction Id="ShowSuccessMessage" BinaryKey="ShowMessageScript" VBScriptCall="" Execute="immediate" Return="check" />
        
            <!-- Add all Custom Actions -->
            <InstallExecuteSequence>
              <!-- Custom action display success message -->
              <Custom Action="ShowSuccessMessage" After="InstallFinalize">NOT Installed</Custom>
              <!-- Run app directly after installation -->
              <!-- <Custom Action="RunApp" Before="InstallFinalize">NOT REMOVE</Custom> -->
            </InstallExecuteSequence>
        
            <!-- Interface options -->
            <UI>
                  <UIRef Id="WixUI_InstallDir" />
                  <UIRef Id="WixUI_ErrorProgressText" />
            </UI> 
        
            <!-- Provide license; it should exist in the SourceDir folder -->
            <WixVariable Id="WixUILicenseRtf" Value="SourceDir/openms_license.rtf" />
          </Product>
        </Wix>
        EOF

    - name: Build .wixobj file with candle.exe
      run: |
        ./wix/candle.exe streamlit_exe.wxs streamlit_exe_files.wxs
        
    - name: Link .wixobj file into .msi with light.exe
      run: |
        ./wix/light.exe -ext WixUIExtension -sice:ICE60 -o ${{ env.APP_NAME }}.msi streamlit_exe_files.wixobj streamlit_exe.wixobj

    - name: Compress Installer
      run: |
        7z a OpenMS-App.zip ${{ env.APP_NAME }}.msi

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: OpenMS-App
        path: |
          OpenMS-App.zip
